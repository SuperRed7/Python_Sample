# coding:utf-8
# 位与运算(&)
# 两个操作数据的二进制表示,只有对应数位都是1,结果数位才是1,否则为0
print(12&8)
# 0000 0000 0000 1100 ->12
# 0000 0000 0000 1000 ->8
# -------------------
# 0000 0000 0000 1000 ->8

# 位或运算(|)
# 两个操作数据的二进制表示,只有对应数位都是0,结果数位才是0,否则为1
print(12|8)
# 0000 0000 0000 1100 ->12
# 0000 0000 0000 1000 ->8
# -------------------
# 0000 0000 0000 1100 ->12

# 位异或运算(^)
# 两个操作数据的二进制相同(同时为0或同时为1),结果为0,否则为1
print(12^8)
# 0000 0000 0000 1100 ->12
# 0000 0000 0000 1000 ->8
# -------------------
# 0000 0000 0000 0100 ->4

# 位取反运算(~)
# 操作数中对应的二进制数1修改为0,0修改为1
print(~12)
# 0000 0000 0000 1100 ->12
# -------------------
# 1111 1111 1111 0011 ->-13

# 左移位运算
# 将一个二进制数向左移动指定的位数,左边(高位端)溢出的位被丢弃,右边(低位端)的空位用0补充
# 左移位运算相当于乘以2的N次幂
print(12<<2)
# 0000 0000 0000 1100 ->12
# 12*(2**2)
# -------------------
# 00 0000 0000 0011 0000 ->48

# 右移位运算
# 将一个二进制数向右移动指定的位数,右边(低位端)溢出的位被丢弃,左边(高位端)的空位端,如果最高位是0(正数)左侧空位填0,如果最高位是1(负数),左侧空位填1
# 右移位运算相当于除以2的N次幂
print(12>>2)
# 0000 0000 0000 1100 ->12
# 12/(2**2)
# -------------------
# 00 0000 0000 0000 11 00 ->3
